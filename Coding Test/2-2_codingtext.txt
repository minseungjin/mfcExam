#include <string>
#include <vector>

using namespace std;

//i + j <= k를 만족하는 모든 (i, j)에 대한 board[i][j]의 합을 return
#define RETURN_EXCEPTION -1
int solution(vector<vector<int>> board, int k) {
    int answer = 0;
    
    do
    {
        //1 ≤ board의 길이 ≤ 100
        if (1 > board.size() || board.size() > 100)
        {
            answer = RETURN_EXCEPTION;
            break;
        }


        for (size_t i = 0; i < board.size(); i++)
        {
            // 1 ≤ board[i]의 길이 ≤ 100
            if (1 > board[i].size() || board[i].size() > 100)
            {
                answer = RETURN_EXCEPTION;
                break;
            }

            //0 ≤ k < board의 길이 + board[i]의 길이
            if (0 > k || k >= (board.size() + board[i].size()))
            {
                answer = RETURN_EXCEPTION;
                break;
            }

            vector<int> subBoard = board[i];
            for (size_t j = 0; j < subBoard.size(); j++)
            {
                if (i + j <= k)
                {
                    answer += board[i][j];
                }
            }
        }
    } while (false);
    
    return answer;
}